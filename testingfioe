To run Cucumber tests with JSON data, you can follow these steps:

1. **Prepare Your JSON Data**:
   - Create a JSON file containing the test data. Each object in the JSON should represent a set of data for a specific test scenario. For example:
   ```json
   [
       { "username": "user1", "password": "pass123" },
       { "username": "user2", "password": "password" },
       { "username": "testuser", "password": "testpass" }
   ]
   ```

2. **Feature File**:
   - In your feature file, create a scenario outline as shown in the previous example. Use placeholders for the data you want to replace, such as `<username>` and `<password>`.

3. **Step Definitions**:
   - In your step definitions, read the JSON data and map it to the corresponding placeholders in your scenario outline.

Here's an example of how your step definitions might look:

```java
import io.cucumber.java.en.Given;
import io.cucumber.java.en.When;
import io.cucumber.java.en.Then;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

public class MyStepDefinitions {

    @Given("the user is on the login page")
    public void navigateToLoginPage() {
        // Add code to navigate to the login page
    }

    @When("the user enters data from JSON file {string}")
    public void enterDataFromJSON(String jsonFilePath) {
        // Read the JSON data from the file
        JSONObject jsonObject = readJsonFile(jsonFilePath);
        // Extract username and password and fill in the login fields
        String username = jsonObject.get("username").toString();
        String password = jsonObject.get("password").toString();
        // Add code to enter this data in the login fields
    }

    @Then("the user is logged in successfully")
    public void verifySuccessfulLogin() {
        // Add assertions to verify successful login
    }

    private JSONObject readJsonFile(String jsonFilePath) {
        // Add code to read and parse the JSON file
        JSONParser parser = new JSONParser();
        try {
            Object obj = parser.parse(new FileReader(jsonFilePath));
            return (JSONObject) obj;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }
}
```

4. **Run Tests**:
   - Run your Cucumber tests. You can pass the path to your JSON data file as an argument to your tests.

For example, if you're using the command line, you can run your tests like this:

```bash
cucumber --tags @yourTag --glue yourStepDefinitionsPath path/to/your/data.json
```

Make sure to adjust the step definitions and JSON data file path as per your project structure and requirements.