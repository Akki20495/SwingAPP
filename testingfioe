Certainly! Below is an example of Java code to set up and use Selenium Grid. First, you need to have Selenium WebDriver and Selenium Server JARs in your project's classpath.

```java
import org.openqa.selenium.By;
import org.openqa.selenium.Platform;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;

import java.net.MalformedURLException;
import java.net.URL;

public class SeleniumGridExample {

    public static void main(String[] args) throws MalformedURLException {
        // Define the URL of the Selenium Grid hub
        URL hubURL = new URL("http://<grid-hub-ip>:4444/wd/hub");

        // Define the DesiredCapabilities to specify browser and platform
        DesiredCapabilities capabilities = new DesiredCapabilities();
        capabilities.setBrowserName("chrome");
        capabilities.setPlatform(Platform.WINDOWS);

        // Create a WebDriver instance that connects to the Selenium Grid hub
        WebDriver driver = new RemoteWebDriver(hubURL, capabilities);

        // Perform actions on the remote WebDriver
        driver.get("https://www.example.com");
        WebElement element = driver.findElement(By.name("q"));
        element.sendKeys("Selenium Grid");
        element.submit();

        // Close the WebDriver session
        driver.quit();
    }
}
```

Replace `<grid-hub-ip>` with the actual IP or hostname of your Selenium Grid hub. This code connects to the Selenium Grid hub and runs tests on the specified browser and platform.

Make sure you have the Selenium Server running on the machine specified as the hub and have nodes registered with different browser and platform configurations. This allows you to distribute test execution across multiple machines and browsers.